type Query {
  board: [BoardWithDupeValue]
  percentageCompleted: Int
  getTokenString: String!
}

type Board {
  colsAndRows: [[Int!]!]
  locked: [Coords]
}

type Coords {
  x: Int
  y: Int
}

type BoardWithDupeValue {
  sessionID:String!
  board: Board!
  dupeCol: [Int!]
  dupeRow: [Int!]
  culpritsCoords: [Coords!]
}

type Mutation {
  joinRoom(mode: GameMode!): GameMode
  clickOnTile(x: Int!, y: Int!): BoardWithDupeValue
  ready:Boolean
}

type Subscription {
  opponentBoardUpdated(sessionID:String!): BoardWithDupeValue
}

enum GameMode {
  single
  multiple
}
